---
- name: Install OpenShift Pipelines Operator
  hosts: localhost
  gather_facts: no
  vars:
    openshift_pipelines_channel: "latest"  # Adjust this if needed
    cluster_admin: cluster-admin
    cluster_admin_pass: Password.54321
    cluster_api_url: https://api.e5n9l5l2t8z7q0d.qnbq.p3.openshiftapps.com:443

  tasks:
    - name: Create Auth Token for OpenShift API
      kubernetes.core.k8s_auth:
        username: "{{ cluster_admin }}"
        password: "{{ cluster_admin_pass }}"
        host: "{{ cluster_api_url }}"
        validate_certs: true 
      register: k8s_auth_results

    - name: Check for existing OpenShift Pipelines Operator Subscription
      k8s_info:
        host: "{{ cluster_api_url }}"
        api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
        api_version: operators.coreos.com/v1alpha1
        kind: Subscription
        name: openshift-pipelines-operator-rh
        namespace: openshift-operators
      register: existing_subscription

    - name: Create OpenShift Pipelines Operator Subscription
      k8s:
        host: "{{ cluster_api_url }}"
        api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
        definition:
          apiVersion: operators.coreos.com/v1alpha1
          kind: Subscription
          metadata:
            name: openshift-pipelines-operator-rh
            namespace: openshift-operators
          spec:
            channel: "{{ openshift_pipelines_channel }}"
            installPlanApproval: Manual
            name: openshift-pipelines-operator-rh
            source: redhat-operators
            sourceNamespace: openshift-marketplace
      when: existing_subscription.resources | length == 0

    - name: Wait for OpenShift Pipelines Operator InstallPlan
      k8s_info:
        host: "{{ cluster_api_url }}"
        api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
        api_version: operators.coreos.com/v1alpha1
        kind: InstallPlan
        namespace: openshift-operators
        label_selectors:
          - "operators.coreos.com/openshift-pipelines-operator-rh.openshift-operators"
      register: install_plan
      until: 
        - install_plan.resources | length > 0
        - install_plan.resources[0].spec is defined
        - install_plan.resources[0].spec.approved is defined
      retries: 30
      delay: 10

    - name: Display InstallPlan status
      debug:
        msg: 
          - "InstallPlan Name: {{ install_plan.resources[0].metadata.name }}"
          - "Approval Status: {{ install_plan.resources[0].spec.approved }}"

    - name: Approve InstallPlan if needed
      k8s:
        host: "{{ cluster_api_url }}"
        api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
        definition:
          apiVersion: operators.coreos.com/v1alpha1
          kind: InstallPlan
          metadata:
            name: "{{ install_plan.resources[0].metadata.name }}"
            namespace: openshift-operators
          spec:
            approved: true
      when: 
        - install_plan.resources | length > 0
        - install_plan.resources[0].spec.approved == false

    - name: Wait for OpenShift Pipelines Operator CSV to be ready
      k8s_info:
        host: "{{ cluster_api_url }}"
        api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
        api_version: operators.coreos.com/v1alpha1
        kind: ClusterServiceVersion
        namespace: openshift-operators
        label_selectors:
          - "operators.coreos.com/openshift-pipelines-operator-rh.openshift-operators"
      register: csv_status
      until: 
        - csv_status.resources | length > 0
        - csv_status.resources[0].status.phase is defined
        - csv_status.resources[0].status.phase == "Succeeded"
      retries: 15
      delay: 20

    - name: Display OpenShift Pipelines Operator status
      debug:
        msg: "OpenShift Pipelines Operator is now {{ csv_status.resources[0].status.phase }}"

    - name: Verify Tekton CRDs
      k8s_info:
        host: "{{ cluster_api_url }}"
        api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
        api_version: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        name: pipelines.tekton.dev
      register: tekton_crd

    - name: Display Tekton CRD status
      debug:
        msg: "Tekton Pipeline CRD: {{ 'Installed' if tekton_crd.resources else 'Not installed' }}"