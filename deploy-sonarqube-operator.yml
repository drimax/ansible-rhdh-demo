---
- name: Deploy SonarQube using OpenShift Operator
  hosts: localhost
  gather_facts: no
  vars:
    cluster_admin: cluster-admin
    cluster_admin_pass: Password.54321
    cluster_api_url: https://api.e5n9l5l2t8z7q0d.qnbq.p3.openshiftapps.com:443
    devops_namespace: devops
    sonarqube_channel: "alpha"  # Adjust this based on available channels
    github_client_id: Ov23liSuUqmknk1PiZO5
    github_client_secret: 8906a0f76e0a81ffeafbc35b419ce3d54cfc5cee

  tasks:
    - name: Create Auth Token for OpenShift API
      kubernetes.core.k8s_auth:
        username: "{{ cluster_admin }}"
        password: "{{ cluster_admin_pass }}"
        host: "{{ cluster_api_url }}"
        validate_certs: true 
      register: k8s_auth_results

    - name: Retrieve cluster domain
      k8s_info:
        host: "{{ cluster_api_url }}"
        api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
        api_version: config.openshift.io/v1
        kind: Ingress
        name: cluster
      register: ingress_info

    - name: Set cluster domain fact
      set_fact:
        cluster_domain: "{{ ingress_info.resources[0].spec.domain }}"

    - name: Generate SonarQube URL
      ansible.builtin.set_fact:
        sonarqube_url: "https://sonarqube-{{ devops_namespace }}.{{ cluster_domain }}"

    - name: Display SonarQube URL
      ansible.builtin.debug:
        msg: "SonarQube URL: {{ sonarqube_url }}"

    - name: Display GitHub OAuth Callback URL
      debug:
        msg: "Set the GitHub OAuth Callback URL to: {{ sonarqube_url }}/oauth2/callback/github"

    - name: Create or ensure devops namespace
      k8s:
        host: "{{ cluster_api_url }}"
        api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: "{{ devops_namespace }}"

    - name: Create GitHub OAuth secret
      k8s:
        host: "{{ cluster_api_url }}"
        api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: github-oauth-secret
            namespace: "{{ devops_namespace }}"
          type: Opaque
          stringData:
            client-id: "{{ github_client_id }}"
            client-secret: "{{ github_client_secret }}"

    - name: Create RedHatGov Catalog Source
      k8s:
        host: "{{ cluster_api_url }}"
        api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
        definition:
          apiVersion: operators.coreos.com/v1alpha1
          kind: CatalogSource
          metadata:
            name: redhatgov-operators
            namespace: openshift-marketplace
          spec:
            sourceType: grpc
            image: quay.io/redhatgov/operator-catalog:latest
            displayName: Red Hat NAPS Community Operators
            publisher: RedHatGov

    - name: Check for existing OperatorGroups
      k8s_info:
        host: "{{ cluster_api_url }}"
        api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
        api_version: operators.coreos.com/v1
        kind: OperatorGroup
        namespace: "{{ devops_namespace }}"
      register: existing_operator_groups

    - name: Fail if multiple OperatorGroups exist
      fail:
        msg: "Multiple OperatorGroups found in {{ devops_namespace }}. Please remove extra OperatorGroups and retry."
      when: existing_operator_groups.resources | length > 1

    - name: Create Operator Group in devops namespace
      k8s:
        host: "{{ cluster_api_url }}"
        api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
        definition:
          apiVersion: operators.coreos.com/v1
          kind: OperatorGroup
          metadata:
            name: "{{ devops_namespace }}-operator-group"
            namespace: "{{ devops_namespace }}"
          spec:
            targetNamespaces:
              - "{{ devops_namespace }}"
        when: existing_operator_groups.resources | length == 0

    - name: Subscribe to SonarQube Operator
      k8s:
        host: "{{ cluster_api_url }}"
        api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
        definition:
          apiVersion: operators.coreos.com/v1alpha1
          kind: Subscription
          metadata:
            name: sonarqube-operator
            namespace: "{{ devops_namespace }}"
          spec:
            channel: alpha
            name: sonarqube-operator
            source: redhatgov-operators
            sourceNamespace: openshift-marketplace

    - name: Wait for SonarQube Operator to be ready
      k8s_info:
        host: "{{ cluster_api_url }}"
        api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
        api_version: operators.coreos.com/v1alpha1
        kind: ClusterServiceVersion
        namespace: "{{ devops_namespace }}"
        label_selectors:
          - operators.coreos.com/sonarqube-operator.{{ devops_namespace }}
      register: csv_status
      until: 
        - csv_status.resources | length > 0
        - csv_status.resources[0].status is defined
        - csv_status.resources[0].status.phase is defined
        - csv_status.resources[0].status.phase == 'Succeeded'
      retries: 15
      delay: 60

    - name: Display CSV status
      debug:
        var: csv_status

    - name: Deploy SonarQube instance
      k8s:
        host: "{{ cluster_api_url }}"
        api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
        definition:
          apiVersion: redhatgov.io/v1alpha1
          kind: Sonarqube
          metadata:
            name: sonarqube
            namespace: "{{ devops_namespace }}"
          spec:
            sonarqube:
              image:
                src: quay.io/redhatgov/sonarqube
                tag: "8.3.1.34397"
              plugins:
                - name: sonar-auth-github-plugin
                  version: "1.6.0"
              env:
                - name: SONAR_AUTH_GITHUB_ENABLED
                  value: "true"
                - name: SONAR_AUTH_GITHUB_CLIENTID
                  value: "{{ github_client_id }}"
                - name: SONAR_AUTH_GITHUB_CLIENTSECRET
                  value: "{{ github_client_secret }}"
                - name: SONAR_AUTH_GITHUB_ORGANIZATIONS
                  value: "{{ github_organizations | join(',') }}"
            postgresql:
              image:
                src: registry.redhat.io/rhel8/postgresql-10
                tag: latest
            ingress:
              enabled: true
            route:
              enabled: true
              host: "sonarqube-{{ devops_namespace }}.{{ cluster_domain }}"

    - name: Wait for SonarQube instance to be ready
      k8s:
        host: "{{ cluster_api_url }}"
        api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
        api_version: redhatgov.io/v1alpha1
        kind: Sonarqube
        name: sonarqube
        namespace: "{{ devops_namespace }}"
      register: sonarqube_status
      until: sonarqube_status.result.status.ready is defined and sonarqube_status.result.status.ready
      retries: 30
      delay: 60

    - name: Display SonarQube URL
      debug:
        msg: "SonarQube URL: https://sonarqube-{{ devops_namespace }}.{{ cluster_domain }}"